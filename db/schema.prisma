// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// https://www.npmjs.com/package/zod-prisma
generator zod {
  provider = "zod-prisma"
}

// https://www.npmjs.com/package/prisma-json-schema-generator
generator jsonSchema {
  provider                 = "prisma-json-schema-generator"
  keepRelationScalarFields = "true"
  includeRequiredFields    = "true"
}

// --------------------------------------

model User {
  id             Int      @id @default(autoincrement())
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  name           String?
  email          String   @unique
  hashedPassword String?
  role           String   @default("USER")

  tokens   Token[]
  sessions Session[]
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

enum TokenType {
  RESET_PASSWORD
}

model Farm {
  /// { "adminMenu": true }
  id   Int    @id @default(autoincrement())
  /// { "column": true, "searchable": true }
  name String
  Pets Pet[]
}

model Animal {
  /// { "adminMenu": true }
  id          Int     @id @default(autoincrement())
  /// { "column": true, "searchable": true }
  name        String
  /// { "multiline": true, "searchable": true }
  description String
  /// { "column": true }
  numLegs     Int
  /// { "column": true }
  isFurry     Boolean
  Pet         Pet[]
}

model Pet {
  /// { "adminMenu": true }
  id       Int     @id @default(autoincrement())
  /// { "column": true, "searchable": true }
  name     String
  /// { "column": true }
  animal   Animal? @relation(fields: [animalId], references: [id])
  /// { "relation": "animal" }
  animalId Int?
  Farms    Farm[]
}
